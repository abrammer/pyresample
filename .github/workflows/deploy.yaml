name: Deploy sdist and wheels

on:
  push:

jobs:
  build_sdist:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v2

      - name: Create sdist
        shell: bash -l {0}
        run: |
          python -m pip install -q build
          python -m build -s

      - name: Upload sdist to build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: sdist
          path: dist/*.tar.gz


  build_wheels:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest]
        python-version: [3.8]

    steps:
      - uses: actions/checkout@v2
      - run: |
          git fetch --prune --unshallow

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install -U -q pip Cython wheel setuptools twine numpy build

      - name: Build and install macOS/Windows wheel
        if: matrix.os != 'ubuntu-latest'
        run: |
          python -m build -w

      - name: Build Linux wheels inside docker
        if: matrix.os == 'ubuntu-latest'
        run: |
          docker run \
            -e PLAT=${{ matrix.docker-image }} \
            -e USE_OMP=1 \
            -v `pwd`:/io \
            quay.io/pypa/${{ matrix.docker-image }} \
            /io/continuous_integration/build-manylinux-wheels.sh

      - name: Setup Conda Environment
        uses: conda-incubator/setup-miniconda@v2
        with:
          miniconda-version: "latest"
          python-version: ${{ matrix.python-version }}
          mamba-version: "*"
          channels: conda-forge,defaults
          environment-file: continuous_integration/environment.yaml
          activate-environment: test-environment

      - name: make tempdir
        run: |
             mkdir ./temp
             mv pyresample/test ./temp/
             rm -rf pyresample/
            

      - name: test wheels
        shell: bash -l {0} 
        run: |
          pwd
          echo ${HOME}
          echo ${{ github.workspace }}
          for whl in ${{ github.workspace }}/dist/pyresample*whl; do 
              echo ${whl}
              pip install ${whl} --force-reinstall --no-deps
              pytest test/ 
          done
        working-directory: ./temp

      - name: Upload wheel(s) as build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: dist/*.whl

